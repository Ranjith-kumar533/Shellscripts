#!/bin/bash

#Global varaiables
PRODUCTS=(17 18 19 20 21 22 23 24)
#The below variables will have draw not closed for the current DAYCOUNT
GAME1=()
GAME2=()
GAME3=()
GAME4=()
GAME5=()
GAME6=()
GAME7=()
GAME8=()

#colours
black='tput setaf 0'
red='tput setaf 1'
green='tput setaf 2'
yellow='tput setaf 3'
blue='tput setaf 4'
magenta='tput setaf 5'
cyan='tput setaf 6'
white='tput setaf 7'
cancel='tput sgr0'


#To find the current DAYCOUNT
cd /qaoltp2/platform/gtms/bin
./gxDAYCOUNT <<+ >/qaoltp2/util/bin/temp.txt
0
+

DAYCOUNT=$(grep 'DAYCOUNT :' /qaoltp2/util/bin/temp.txt | awk '{print $3}')
$blue
echo "Please wait, the system is checking for the closed draws information for DAYCOUNT $DAYCOUNT"
$cancel
#DAYCOUNT found, so we can clear the tempDAYCOUNT.txt file to reuse

echo "">/qaoltp2/util/bin/temp.txt


#Need to find the current open draw number for the DAYCOUNT
for game in ${PRODUCTS[@]}
do
cd /qaoltp2/prosys/usec/bin
./xrpc <<+ >/qaoltp2/util/bin/temp.txt
get_game_status
Y
$game
0
+

currentdraw=$(grep -w 'draw: ' /qaoltp2/util/bin/temp.txt | awk '{print $3}')
currentdraw=$((currentdraw-4))
#echo $currentdraw

#currentdraw has been identified, need to find the draw numbers which has drawstatus = 5

for i in {1 2 3 4 5}
do
#currentdraw=$((currentdraw+1))
cd /qaoltp2/prosys/usec/bin
./xrpc <<+ >/qaoltp2/util/bin/temp.txt
get_game_status
Y
$game
$currentdraw
+
currentdraw=$((currentdraw+1))

if grep -q "draw_status: { 5 }" /qaoltp2/util/bin/temp.txt && grep -q "draw_DAYCOUNT: { $DAYCOUNT }" /qaoltp2/util/bin/temp.txt;
then
closeddraw=$(grep -w 'draw: ' /qaoltp2/util/bin/temp.txt | awk '{print $3}')
if [ "$game" = "17" ]
then
GAME1+=($closeddraw)
elif [ "$game" = "18" ]
then
GAME2+=($closeddraw)
elif [ "$game" = "19" ]
then
GAME3+=($closeddraw)
elif [ "$game" = "20" ]
then
GAME4+=($closeddraw)
elif [ "$game" = "21" ]
then
GAME5+=($closeddraw)
elif [ "$game" = "22" ]
then
GAME6+=($closeddraw)
elif [ "$game" = "23" ]
then
GAME7+=($closeddraw)
else
GAME17+=($closeddraw)
fi
fi
done
done
$magenta
echo "closed draw for GAME1: ${GAME1[@]}"
echo "closed draw for GAME2: ${GAME2[@]}"
echo "closed draw for GAME4: ${GAME3[@]}"
echo "closed draw for GAME5: ${GAME4[@]}"
echo "closed draw for GAME3: ${GAME5[@]}"
echo "closed draw for GAME6: ${GAME6[@]}"
echo "closed draw for GAME7: ${GAME7[@]}"
echo "closed draw for GAME8: ${GAME17[@]}"
$cancel

#echo ${GAME2[0]}
#echo ${GAME17[0]}
#echo ${GAME5[0]}

GAME2_and_pick_4_draw_processing(){

cd /qaoltp2/prosys/usec/bin
./xrpc <<+ >/qaoltp2/util/bin/temp.txt
enter_win_nbrs
Y
$1
$2
$3
1
$4|
null
$6
0
0
0
$5
+
if grep -q -i "successful" /qaoltp2/util/bin/temp.txt; then
$green
echo "successful"
$cancel
else
$red
echo "Test failed"
$cancel
exit 0
fi
sleep 5
}

#system data - 1 - product, 2 - action,  3 - draw
#user date - 4 - winning numbers, 5 - fireball number

#calling pick 3 and pick 4 draw processing for pick 3

alnoshares(){
cd /qaoltp2/prosys/usec/bin
./xrpc <<+ >/qaoltp2/util/bin/temp.txt
enter_shares
Y
$1
$2
$3
1
$4
+

if grep -q -i "successful" /qaoltp2/util/bin/temp.txt; then
$green
echo "shares successful"
$cancel
else
$red
echo "Test failed"
$cancel
exit 0
fi
sleep 5
}



winnumprefer(){
if [ "$1" = "18" ]; then
tempnum=203
tempf=1
tempp=null
elif [ "$1" = "21" ]; then
tempnum=2034
tempf=1
tempp=null
elif [ "$1" = "24" ]; then
tempnum=01,02,03,04,05,06,07,017,018,19,11,20
tempf=0
tempp=null
elif [ "$1" = "20" ]; then
tempnum=01,02,03,04
tempf=0
tempp=05
elif [ "$1" = "19" ]; then
tempnum=01,02,03,04,05
temf=0
tempp=null
fi
$cyan
echo "Are you okay with numbers $tempnum , add on number $tempf (not applicable for games other dhan GAME2 and GAME3) and add on number $tempp (only applicable for GAME5)  y/n?"
read -e preference
if [ "$preference" = "n" ]; then
$red
echo -e  "Please enter the winning numbers as per this, if wrongly entered the test will fail, then need to re-execute the script
\n1. GAME 1 - 1 to 53 - Two digit comma separated values
\n2. GAME 2 - 1 to 18 - single digit no comma
\n3. GAME 3 - 1 to 35 - Two digit comma separated values
\n4. GAME 4 - 1 to 35 - Two digit comma separated values
\n5. GAME 5 - 1 to 18 - single digit no comma
\n6. GAME 6 - 1 to 618 - Two digit comma separated values - 1 to 26 - GAME6
\n7. GAME 7 - 1 to 70 - Two digit comma separated values - 1 to 25 GAME7ball
\n8. GAME 8  - 1 to 24 - Two digit comma separated values"
$cancel

echo "Enter the normal numbers as per above instruction"
read -e tempnum
echo "Enter value for add on number in single digit(Enter 0 for GAME8 and GAME4)"
if [ "$1" = "20" ]; then
read -e tempp
else
read -e tempf
fi

echo "OKAY!"
$cancel
fi
}

#game 1
if [ ${#GAME2[@]} -eq 0 ]; then
$yellow
echo "No draws to process for pick 3"
$cancel
else
for drawno in ${GAME2[@]}
do
winnumprefer 18
$green
 echo "Draw processing starting for game GAME2 draw $drawno"
$cancel
for action in 1 2 21
do
GAME2_and_pick_4_draw_processing ${PRODUCTS[1]} $action $drawno $tempnum $tempf $tempp
done
done
fi

#game 2
if [ ${#GAME5[@]} -eq 0 ]; then
$yellow
echo "No draws to process for Daily 4"
$cancel
else
for drawno in ${GAME5[@]}
do
winnumprefer 21
$green
echo "Draw processing starting for game daily 4 draw $drawno"
$cancel
for action in 1 2 21
do
GAME2_and_pick_4_draw_processing ${PRODUCTS[4]} $action $drawno $tempnum $tempf $tempp
done
done
fi

#GAME 8
if [ ${#GAME17[@]} -eq 0 ]; then
$yellow
echo "No draws to process for GAME8"
$cancel
else
for drawno in ${GAME17[@]}
do
$green
echo "Draw processing starting for game GAME8 draw $drawno"
$cancel
winnumprefer 24
for action in 1 2 21
do
GAME2_and_pick_4_draw_processing ${PRODUCTS[7]} $action $drawno $tempnum $tempf $tempp
done

for action in 11 20
do
alnosharevalues="25000000,1900000,190000,50000,19000,5000,4000,3000,2000,1900|"
alnoshares ${PRODUCTS[7]} $action $drawno $alnosharevalues
done
done
fi

#game 9
if [ ${#GAME4[@]} -eq 0 ]; then
$yellow
echo "No draws to process for GAME8"
$cancel
else
for drawno in ${GAME4[@]}
do
$green
echo "Draw processing starting for game GAME5  draw $drawno"
$cancel
winnumprefer 20
for action in 1 2 21
do
GAME2_and_pick_4_draw_processing ${PRODUCTS[3]} $action $drawno $tempnum $tempf $tempp
done

for action in 11 20
do
texassharevalues="19000000,5000000,1900000,190000,50000,2000,1900|"
alnoshares ${PRODUCTS[3]} $action $drawno $texassharevalues
done
done
fi

#game 4
if [ ${#GAME3[@]} -eq 0 ]; then
$yellow
echo "No draws to process for GAME4"
$cancel
else
for drawno in ${GAME3[@]}
do
$green
echo "Draw processing starting for game GAME4 draw $drawno"
$cancel
winnumprefer 19
for action in 1 2 21
do
GAME2_and_pick_4_draw_processing ${PRODUCTS[2]} $action $drawno $tempnum $tempf $tempp
done

for action in 11 20
do
cashsharevalues="2500000,35000,2300,190|"
alnoshares ${PRODUCTS[2]} $action $drawno $cashsharevalues
done
done
fi

$cancel
rm -f /qaoltp2/util/bin/temp.txt
unset -f winnumprefer

